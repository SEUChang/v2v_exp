// Generated by gencpp from file perception_msgs/GlobalPathResponse.msg
// DO NOT EDIT!


#ifndef PERCEPTION_MSGS_MESSAGE_GLOBALPATHRESPONSE_H
#define PERCEPTION_MSGS_MESSAGE_GLOBALPATHRESPONSE_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <perception_msgs/GlobalPathIndex.h>

namespace perception_msgs
{
template <class ContainerAllocator>
struct GlobalPathResponse_
{
  typedef GlobalPathResponse_<ContainerAllocator> Type;

  GlobalPathResponse_()
    : path()  {
    }
  GlobalPathResponse_(const ContainerAllocator& _alloc)
    : path(_alloc)  {
  (void)_alloc;
    }



   typedef  ::perception_msgs::GlobalPathIndex_<ContainerAllocator>  _path_type;
  _path_type path;





  typedef boost::shared_ptr< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> const> ConstPtr;

}; // struct GlobalPathResponse_

typedef ::perception_msgs::GlobalPathResponse_<std::allocator<void> > GlobalPathResponse;

typedef boost::shared_ptr< ::perception_msgs::GlobalPathResponse > GlobalPathResponsePtr;
typedef boost::shared_ptr< ::perception_msgs::GlobalPathResponse const> GlobalPathResponseConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::perception_msgs::GlobalPathResponse_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace perception_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'perception_msgs': ['/home/sunhao/wild/src/perception_msgs/msg'], 'actionlib_msgs': ['/opt/ros/kinetic/share/actionlib_msgs/cmake/../msg'], 'nav_msgs': ['/opt/ros/kinetic/share/nav_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "292fb84095eab8f09dbe7364f93297bf";
  }

  static const char* value(const ::perception_msgs::GlobalPathResponse_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x292fb84095eab8f0ULL;
  static const uint64_t static_value2 = 0x9dbe7364f93297bfULL;
};

template<class ContainerAllocator>
struct DataType< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "perception_msgs/GlobalPathResponse";
  }

  static const char* value(const ::perception_msgs::GlobalPathResponse_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "perception_msgs/GlobalPathIndex path\n\
\n\
================================================================================\n\
MSG: perception_msgs/GlobalPathIndex\n\
#############################\n\
###       SunHao          ###\n\
#############################\n\
\n\
\n\
int32 start_section\n\
int32 start_lane\n\
int32 start_pt\n\
\n\
#########################\n\
\n\
int32[] topo\n\
\n\
#########################\n\
int32 goal_section\n\
int32 goal_lane\n\
int32 goal_pt\n\
\n\
";
  }

  static const char* value(const ::perception_msgs::GlobalPathResponse_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.path);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct GlobalPathResponse_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::perception_msgs::GlobalPathResponse_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::perception_msgs::GlobalPathResponse_<ContainerAllocator>& v)
  {
    s << indent << "path: ";
    s << std::endl;
    Printer< ::perception_msgs::GlobalPathIndex_<ContainerAllocator> >::stream(s, indent + "  ", v.path);
  }
};

} // namespace message_operations
} // namespace ros

#endif // PERCEPTION_MSGS_MESSAGE_GLOBALPATHRESPONSE_H
